/*
 * JSP generated by Resin-3.0.19 (built Mon, 15 May 2006 04:50:47 PDT)
 */

package _jsp._statistics;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;

public class _total_0time_0num__jsp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.Application _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = com.caucho.jsp.QJspFactory.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    com.caucho.jsp.IteratorLoopSupportTag _jsp_loop_0 = null;
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      if (_jsp_loop_0 == null)
        _jsp_loop_0 = new com.caucho.jsp.IteratorLoopSupportTag();
      java.util.Iterator _jsp_iter_1 = com.caucho.jstl.el.ForEachTag.getIterator(_caucho_expr_0.evalObject(pageContext));
      _jsp_loop_0.init(0, Integer.MAX_VALUE, 1);
      Object _jsp_status_1 = pageContext.putAttribute("status", _jsp_loop_0);
      Object _jsp_oldVar_1 = pageContext.getAttribute("single");
      while (_jsp_iter_1.hasNext()) {
        Object _jsp_i_1 = _jsp_iter_1.next();
        pageContext.setAttribute("single", _jsp_i_1);
        _jsp_loop_0.setCurrent(_jsp_i_1, _jsp_iter_1.hasNext());
        out.write(_jsp_string1, 0, _jsp_string1.length);
        _caucho_expr_1.print(out, pageContext, false);
        out.write(_jsp_string2, 0, _jsp_string2.length);
        _caucho_expr_2.print(out, pageContext, false);
        out.write(_jsp_string3, 0, _jsp_string3.length);
      }
      pageContext.pageSetOrRemove("single", _jsp_oldVar_1);
      pageContext.pageSetOrRemove("status", _jsp_status_1);
      out.write(_jsp_string4, 0, _jsp_string4.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      com.caucho.jsp.QJspFactory.freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.make.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != 7932908523769947432L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.make.Dependency depend;
      depend = (com.caucho.make.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("statistics/total_time_num.jsp"), -2724912142168579381L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
  private final static com.caucho.el.Expr _caucho_expr_0 =
    new com.caucho.el.IdExpr("simple2VOS");
  private final static com.caucho.el.Expr _caucho_expr_1 =
    new com.caucho.el.PathExpr(new com.caucho.el.ArrayExpr(new com.caucho.el.IdExpr("single"), new com.caucho.el.StringLiteral("totalMinute")), "single.totalMinute");
  private final static com.caucho.el.Expr _caucho_expr_2 =
    new com.caucho.el.PathExpr(new com.caucho.el.ArrayExpr(new com.caucho.el.IdExpr("single"), new com.caucho.el.StringLiteral("num")), "single.num");

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  private final static char []_jsp_string3;
  private final static char []_jsp_string4;
  static {
    _jsp_string1 = "\r\n					\r\n				<tr>\r\n					<td>".toCharArray();
    _jsp_string2 = "</td>\r\n					<td>".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n <link href=\"http://cdn.bootcss.com/bootstrap/3.2.0/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n <style type='text/css'>\r\n      body {\r\n        background-color: #CCC;\r\n      }\r\n </style>\r\n<div id=\"ami_main\">\r\n<hr/>\r\n\r\n<div class=\"row-fluid\">\r\n	\r\n		<div class=\"ami_table_header\">\r\n			<span class=\"ami_table_header_title\">\u73a9\u5bb6\u6bcf\u65e5\u5728\u7ebf\u65f6\u957f\u5206\u5e03</span>\r\n		</div>\r\n		<table id=\"table_report\" class=\"table table-striped table-bordered table-hover\">\r\n			<thead>			\r\n				<tr>\r\n					<th>\u65f6\u957f\u5206\u5e03\uff08\u5206\u949f\uff09</th>\r\n					<th>\u5728\u7ebf\u4eba\u6570</th>\r\n				</tr>				\r\n			</thead>\r\n			<tbody>		\r\n				\r\n			 ".toCharArray();
    _jsp_string3 = "</td>\r\n				</tr>\r\n				\r\n			  ".toCharArray();
    _jsp_string4 = "\r\n					\r\n			</tbody>\r\n		</table>		\r\n	</div>	\r\n</div>\r\n\r\n\r\n".toCharArray();
  }
}

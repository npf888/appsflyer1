<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.nf.manage" />
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:data_source.properties" />
	</bean>

<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 		destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="${driver}" /> -->
<!-- 		<property name="url" value="${url}" /> -->
<!-- 		<property name="username" value="${username}" /> -->
<!-- 		<property name="password" value="${password}" /> -->
		<!-- 初始化连接大小 -->
<!-- 		<property name="initialSize" value="${initialSize}"></property> -->
		<!-- 连接池最大数量 -->
<!-- 		<property name="maxActive" value="${maxActive}"></property> -->
		<!-- 连接池最大空闲 -->
<!-- 		<property name="maxIdle" value="${maxIdle}"></property> -->
		<!-- 连接池最小空闲 -->
<!-- 		<property name="minIdle" value="${minIdle}"></property> -->
		<!-- 获取连接最大等待时间 -->
<!-- 		<property name="maxWait" value="${maxWait}"></property> -->
<!-- 	</bean> -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"  
            destroy-method="close">  
            <!-- 数据库驱动 -->  
            <property name="driverClass" value="${driver}" />  
            <!-- 相应驱动的jdbcUrl -->  
            <property name="jdbcUrl" value="${url}" />  
            <!-- 数据库的用户名 -->  
            <property name="username" value="${username}" />  
            <!-- 数据库的密码 -->  
            <property name="password" value="${password}" />  
            <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->  
            <property name="idleConnectionTestPeriod" value="200" />  
            <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->  
            <property name="idleMaxAge" value="60" />  
            <!-- 每个分区最大的连接数 -->  
            <property name="maxConnectionsPerPartition" value="20" />  
            <!-- 每个分区最小的连接数 -->  
            <property name="minConnectionsPerPartition" value="10" />  
            <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->  
            <property name="partitionCount" value="3" />  
            <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->  
            <property name="acquireIncrement" value="2" />  
            <!-- 缓存prepared statements的大小，默认值：0 -->  
            <property name="statementsCacheSize" value="0" />  
            <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->  
            <property name="releaseHelperThreads" value="1" />  
        </bean>  
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/nf/manage/dao/mapper/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.nf.manage.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.ip}" />
					<constructor-arg index="1" value="${redis.port}"
						type="int" />
					<constructor-arg index="2" value="${redis.timeout}"
						type="int" />
						
<!-- 					<property name="password" value="${redis.pwd}"/> -->
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="800" />
		<property name="maxIdle" value="300" />
		<property name="maxWaitMillis" value="3000" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
        <property name="minEvictableIdleTimeMillis" value="30000" />
        <property name="testOnBorrow" value="true" />
	</bean>
</beans>